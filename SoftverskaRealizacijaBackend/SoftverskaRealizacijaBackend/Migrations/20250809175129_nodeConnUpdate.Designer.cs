// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftverskaRealizacijaBackend.Infrastructure;

#nullable disable

namespace SoftverskaRealizacijaBackend.Migrations
{
    [DbContext(typeof(CRUDContext))]
    [Migration("20250809175129_nodeConnUpdate")]
    partial class nodeConnUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SoftverskaRealizacijaBackend.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipKorisnika")
                        .HasColumnType("int");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clienti");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin1@gmail.com",
                            Password = "$2a$11$t6IoRjWr7HbmrdRyqFVKBeCf7aO4q7caZRIgI4mUT3Ny0MbbafXQ2",
                            TipKorisnika = 0,
                            fullName = "Admin1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "gost1@gmail.com",
                            Password = "$2a$11$4NpYg0Wc.awYK1QM6knAo.HDVzMGUAMN2FAlu3jjA80MaM.9tvfNi",
                            TipKorisnika = 1,
                            fullName = "Gost1"
                        },
                        new
                        {
                            Id = 3,
                            Email = "kupac1@gmail.com",
                            Password = "$2a$11$050s/hUxcumSARcqKK2tfeKEx1rRjbOiFzy1tT.yDqjZDAjUa2JTu",
                            TipKorisnika = 2,
                            fullName = "Kupac1"
                        },
                        new
                        {
                            Id = 4,
                            Email = "kupac2@gmail.com",
                            Password = "$2a$11$h6mAFAhsJTIlJX/f5ADpy.VKxIsGUBASAN18rh2I1tNejjrE69r0S",
                            TipKorisnika = 2,
                            fullName = "Kupac2"
                        });
                });

            modelBuilder.Entity("SoftverskaRealizacijaBackend.Models.Kvar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Client")
                        .HasColumnType("int");

                    b.Property<int>("Node")
                        .HasColumnType("int");

                    b.Property<int>("StanjeKvara")
                        .HasColumnType("int");

                    b.Property<DateTime>("VremeOtkanjanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VremePrijave")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kvarovi");
                });

            modelBuilder.Entity("SoftverskaRealizacijaBackend.Models.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Nodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Latitude = 45.239600000000003,
                            Longitude = 19.822700000000001
                        },
                        new
                        {
                            Id = 2,
                            Latitude = 45.239600000000003,
                            Longitude = 19.829699999999999
                        });
                });

            modelBuilder.Entity("SoftverskaRealizacijaBackend.Models.NodeConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EndPinId")
                        .HasColumnType("int");

                    b.Property<bool>("HasError")
                        .HasColumnType("bit");

                    b.Property<int>("StartPinId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NodeConnections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndPinId = 2,
                            HasError = false,
                            StartPinId = 1
                        },
                        new
                        {
                            Id = 5,
                            EndPinId = 2,
                            HasError = false,
                            StartPinId = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
